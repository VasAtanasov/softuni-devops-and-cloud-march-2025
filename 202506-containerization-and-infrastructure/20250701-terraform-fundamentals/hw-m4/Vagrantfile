# -*- mode: ruby -*-
# vi: set ft=ruby :

TERRAFORM_DIR = File.join(File.dirname(__FILE__), 'terraform')
SCRIPTS_DIR = File.join(File.dirname(__FILE__), 'scripts')

Vagrant.configure('2') do |config|

  config.ssh.insert_key = false
  config.vm.synced_folder '.', '/vagrant', disabled: true

  config.vm.define :terraform do |terraform|
    terraform.vm.box = 'shekeriev/debian-12.11'

    terraform.vm.hostname = 'docker'

    terraform.vm.synced_folder "#{TERRAFORM_DIR}", '/vagrant/terraform'

    terraform.vm.network :private_network, ip: '192.168.99.100'
    terraform.vm.network :forwarded_port, guest: 80, host: 8000, auto_correct: true
    terraform.vm.network :forwarded_port, guest: 8080, host: 8080, auto_correct: true

    terraform.vm.provider :virtualbox do |vb|
      vb.name = 'terraform'
      vb.customize ['modifyvm', :id, '--memory', 2048]
      vb.customize ['modifyvm', :id, '--cpus', 1]
      vb.customize ['modifyvm', :id, '--groups', '/m4']
    end

    terraform.vm.provision 'boostrap', type: :shell do |shell|
      shell.path = "#{SCRIPTS_DIR}/bootstrap.sh"
    end

    terraform.vm.provision 'install-docker', type: :shell do |shell|
      shell.path = "#{SCRIPTS_DIR}/docker-setup.sh"
    end

    terraform.vm.provision 'install-terraform', type: :shell do |shell|
      shell.path = "#{SCRIPTS_DIR}/terraform-setup.sh"
    end

    terraform.trigger.before :destroy do |trigger|
      trigger.name = "Clean bgapp and Terraform files"
      trigger.run = {
        inline: <<~POWERSHELL
          Get-ChildItem -Directory -Path terraform/task-* | ForEach-Object {
            Remove-Item -Recurse -Force -ErrorAction SilentlyContinue `
              (Join-Path $_ "bgapp"), `
              (Join-Path $_ ".terraform"), `
              (Join-Path $_ "terraform.tfstate"), `
              (Join-Path $_ "terraform.tfstate.backup"), `
              (Join-Path $_ ".terraform.lock.hcl")
          }
        POWERSHELL
      }
    end

  end

end
